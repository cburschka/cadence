#!/usr/bin/env python
import argparse
import os
import shutil
import subprocess

def main():
    args = parser().parse_args()
    args.protocol = args.protocol or ((args.websocket and 'ws' or 'http') + (args.secure and 's' or ''))
    args.host = args.host or args.domain
    args.path = args.path or (args.websocket and '/websocket' or '/http-bind')
    args.port = args.port or str(5280 + args.secure)

    args.muc = args.muc or 'conference.' + args.domain
    args.url = args.url or args.protocol + '://' + args.host + ':' + args.port + args.path
    args.cdn_prefix = args.cdn_prefix or args.prefix
    args.prefix = args.prefix.rstrip('/')
    args.cdn_prefix = args.cdn_prefix.rstrip('/')
    args.cdn_url = args.cdn_url and (args.cdn_url.rstrip('/') + '/') or ''

    args.src_path = os.path.dirname(__file__) or '.'
    shutil.copy(os.path.realpath(args.src_path) + '/Makefile.in', os.getcwd() + '/Makefile')

    if args.packs == 'auto':
        args.packs = ' '.join(folder for folder in os.listdir(args.src_path + '/emoticon-packs')
            if os.path.isfile(args.src_path + '/emoticon-packs/' + folder + '/emoticons.conf'))

    args.css_alt = ' '.join(sorted([x[:-4] for x in os.listdir(args.src_path + '/css/alt/') if x[-4:] == '.css']))

    open('.config.vars', 'w+').write(
'''TITLE={title}
XMPP_URL={url}
XMPP_DOMAIN={domain}
XMPP_MUC={muc}
XMPP_SESSION_AUTH={session_auth}
CHATBOT={chatbot}
PREFIX={prefix}
CDN_PREFIX={cdn_prefix}
CDN_URL={cdn_url}
AGGREGATE={aggregate}
SRC_PATH={src_path}
CSS_ALT={css_alt}
STYLE={style}
PACKS={packs}
'''.format(**vars(args)))


def parser():
    src_path = os.path.dirname(__file__) or '.'
    parser = argparse.ArgumentParser(
      prog='configure',
      description='''Configure cadence for installation.
    '''
      )
    parser.add_argument(
      '-s', '--secure', '--https', action='store_const',
      help='Generate secure URLs (append "s" and increment port number)', dest='secure', const=True, default=False
      )
    parser.add_argument(
      '-ws', '--websocket', action='store_const',
      help='Use websocket instead of BOSH', dest='websocket', const=True, default=False
      )
    parser.add_argument(
      '--domain', type=str,
      help='XMPP domain to log in on.', dest='domain', metavar='DOMAIN', required=True
      )
    parser.add_argument(
      '--protocol', type=str,
      help='Protocol\n[(ws|http)s?]', dest='protocol', metavar='PROTOCOL', default=''
      )
    parser.add_argument(
      '--host', type=str,
      help='Hostname\n[DOMAIN]', dest='host', metavar='HOST', default=''
      )
    parser.add_argument(
      '--port', type=str,
      help='Port\n[5280|5281]', dest='port', metavar='PORT', default=''
      )
    parser.add_argument(
      '--path', type=str,
      help='Path\n[/http-bind|/websocket]', dest='path', metavar='PATH', default=''
      )
    parser.add_argument(
      '--url', '--bosh', type=str,
      help='Socket URL to connect to [PROTOCOL://HOST:PORT/PATH]', metavar='URL', dest='url', default=''
      )
    parser.add_argument(
      '--session-auth', type=str,
      help='The URL to use for session authentication.', metavar='AUTH', dest='session_auth', default=''
      )
    parser.add_argument(
      '--muc', type=str,
      help='The MUC conference server to connect to.', metavar='MUC', dest='muc', default=''
      )
    parser.add_argument(
      '--chatbot', type=str,
      help='[Deprecated] Attribute status messages to a virtual chatbot. []', metavar='CHATBOT', dest='chatbot', default=''
      )
    parser.add_argument(
      '--title', type=str,
      help='The page title. ["cadence"]', metavar='TITLE', dest='title', default='cadence'
      )
    parser.add_argument(
      '--packs', type=str,
      help='Emoticon packs (must be inside emoticon-packs/) ["auto"].', metavar='PACKS', dest='packs', default='auto'
      )
    parser.add_argument(
      '--cdn-url', type=str,
      help='Base URL for resources.', metavar='CDN_URL', dest='cdn_url', default=''
      )
    parser.add_argument(
      '--prefix', type=str,
      help='Directory to install cadence to ["."]', metavar='PREFIX', dest='prefix', default='.'
      )
    parser.add_argument(
      '--cdn-prefix', type=str,
      help='Directory to install resources to [PREFIX]', metavar='CDN_PREFIX', dest='cdn_prefix', default=''
      )
    parser.add_argument(
      '--aggregate', action='store_const',
      help='Aggregate JS/CSS files.', dest='aggregate', const=True, default=False
      )
    parser.add_argument(
      '--style', type=str,
      help='Default alt stylesheet. ["Stygium"]', metavar='STYLE', dest='style', default='Stygium'
      )
    return parser

main()
